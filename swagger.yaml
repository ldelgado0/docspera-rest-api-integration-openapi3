openapi: 3.0.3
info:
  title: Docspera Integration Endpoints - OpenAPI 3.0.0
  contact:
    email: luca@docspera.com
  license:
    name: Proprietary
  version: 1.0.0
  x-logo:
    url: https://docspera.com/assets/D3/pic/Logo-Full-White-Padded.png
    backgroundColor: '#0096FA'
    href: https://docspera.com
servers:
  - url: https://int.velys.docvisor.dev/api/v1
    description: DEV
  - url: https://int.velys.docharp.com/api/v1
    description: SIT
  - url: https://int.velys.d4.docvisor.com/api/v1
    description: QA
  - url: https://int.carecoordination.velys.jnj/api/v1
    description: PROD
security:
  - basicAuth: [ ]
tags:
  - name: integration
    description: Integration Endpoints
paths:
  /organizations/{practiceId}/ingest:
    parameters:
      - name: practiceId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: number
    put:
      tags:
        - integration
      summary: Update Record Set
      description: "Update a record set, including a patient"
      operationId: ingest_update
      requestBody:
        $ref: '#/components/requestBodies/IngestOperation'
      responses:
        "200":
          $ref: '#/components/requestBodies/IngestOperation'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.integration_controller
    post:
      tags:
        - integration
      summary: Ingest Record Set
      description: "Ingest a new record set, including a patient"
      operationId: ingest_new
      requestBody:
        $ref: '#/components/requestBodies/IngestOperation'
      responses:
        "200":
          $ref: '#/components/requestBodies/IngestOperation'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.integration_controller
  /organizations/{practiceId}/patients/{patientId}/recordset:
    parameters:
      - name: practiceId
        in: path
        description: Practice ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: patientId
        in: path
        description: Patient ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
    get:
      tags:
        - integration
      summary: Get Ingestion Record Set
      description: Get the latest ingestion record set for a patient
      operationId: get_ingest
      responses:
        "200":
          $ref: '#/components/requestBodies/IngestOperation'
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.integration_controller
  /organizations/{practiceId}/patients/{patientId}:
    parameters:
      - name: practiceId
        in: path
        description: Practice ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: patientId
        in: path
        description: Patient ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
    get:
      tags:
        - patient
      summary: Get patient
      description: Get a patient record
      operationId: get_patient
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.patient_controller
    put:
      tags:
        - patient
      summary: Update Patient
      description: Update a patient record
      operationId: update_patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Patient'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Patient'
        "404":
          description: Not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.patient_controller
  /organizations/{practiceId}/patients/{patientId}/observations:
    parameters:
      - name: practiceId
        in: path
        description: Practice ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: patientId
        in: path
        description: Patient ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
    get:
      tags:
        - observations
      summary: Get observations
      description: Get a patient's observation records
      operationId: get_observations
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
                x-content-type: application/json
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.observations_controller
  /organizations/{practiceId}/patients/{patientId}/observations/{observationId}:
    parameters:
      - name: practiceId
        in: path
        description: Practice ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: patientId
        in: path
        description: Patient ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: observationId
        in: path
        description: Observation ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
    get:
      tags:
        - observations
      summary: Get observation
      description: Get a patient's observation record
      operationId: get_observation
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
                x-content-type: application/json
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.observations_controller
    put:
      tags:
        - observations
      summary: Update Observation
      description: Update a patient's observation record
      operationId: update_observation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Observation'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Observation'
        "404":
          description: Not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.observations_controller
  /organizations/{practiceId}/patients/{patientId}/medications:
    parameters:
      - name: practiceId
        in: path
        description: Practice ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: patientId
        in: path
        description: Patient ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
    get:
      tags:
        - medications
      summary: Get medications
      description: Get a patient's medication records
      operationId: get_medications
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
                x-content-type: application/json
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.medications_controller
  /organizations/{practiceId}/patients/{patientId}/medications/{medicationId}:
    parameters:
      - name: practiceId
        in: path
        description: Practice ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: patientId
        in: path
        description: Patient ID
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      - name: medicationId
        in: path
        description: Medication ID
        required: true
        style: simple
        explode: false
        schema:
          type: string
    get:
      tags:
        - medications
      summary: Get medication
      description: Get a patient's medication record
      operationId: get_medication
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.medications_controller
    put:
      tags:
        - medications
      summary: Update Medication
      description: Update a patient's medication record
      operationId: update_medication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Medication'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Medication'
        "404":
          description: Not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.medications_controller
  /organizations/{practiceId}/patients/{patientId}/conditions:
    get:
      tags:
        - conditions
      summary: Get conditions
      description: Get a patient's condition records
      operationId: get_conditions
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
                x-content-type: application/json
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.conditions_controller
  /organizations/{practiceId}/patients/{patientId}/conditions/{conditionId}:
    get:
      tags:
        - conditions
      summary: Get condition
      description: Get a patient's condition record
      operationId: get_condition
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: conditionId
          in: path
          description: Condition ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.conditions_controller
    put:
      tags:
        - conditions
      summary: Update Condition
      description: Update a patient's condition record
      operationId: update_condition
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: conditionId
          in: path
          description: Condition ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Condition'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Condition'
        "404":
          description: Not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.conditions_controller
  /organizations/{practiceId}/patients/{patientId}/allergies:
    get:
      tags:
        - allergies
      summary: Get allergies
      description: Get a patient's allergy records
      operationId: get_allergies
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Allergy'
                x-content-type: application/json
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.allergies_controller
  /organizations/{practiceId}/patients/{patientId}/allergies/{allergyId}:
    get:
      tags:
        - allergies
      summary: Get allergy
      description: Get a patient's allergy record
      operationId: get_allergy
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: allergyId
          in: path
          description: Allergy ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allergy'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.allergies_controller
    put:
      tags:
        - allergies
      summary: Update Allergy
      description: Update a patient's allergy record
      operationId: update_allergy
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: allergyId
          in: path
          description: Allergy ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Allergy'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Allergy'
        "404":
          description: Not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.allergies_controller
  /organizations/{practiceId}/patients/{patientId}/appointments:
    get:
      tags:
        - appointments
      summary: Get appointments
      description: Get a patient's appointment records
      operationId: get_appointments
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
                x-content-type: application/json
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.appointments_controller
  /organizations/{practiceId}/patients/{patientId}/appointments/{appointmentId}:
    get:
      tags:
        - appointments
      summary: Get appointment
      description: Get a patient's appointment record
      operationId: get_appointment
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: appointmentId
          in: path
          description: Appointment ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.appointments_controller
    put:
      tags:
        - appointments
      summary: Update Appointment
      description: Update a patient's appointment record
      operationId: update_appointment
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: appointmentId
          in: path
          description: Appointment ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Appointment'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Appointment'
        "404":
          description: Not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.appointments_controller
  /organizations/{practiceId}/patients/{patientId}/surgery:
    get:
      tags:
        - surgery
      summary: Get surgery
      description: Get a patient's surgery record
      operationId: get_surgery
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
        "404":
          description: Not found
      x-openapi-router-controller: swagger_server.controllers.surgery_controller
    put:
      tags:
        - surgery
      summary: Update Surgery
      description: Update a patient's surgery record
      operationId: update_surgery
      parameters:
        - name: practiceId
          in: path
          description: Practice ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
        - name: patientId
          in: path
          description: Patient ID
          required: true
          style: simple
          explode: false
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Surgery'
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Surgery'
        "404":
          description: Not found
        "405":
          description: Invalid input
      x-openapi-router-controller: swagger_server.controllers.surgery_controller
components:
  schemas:
    Value:
      type: object
      properties:
        valueQuantity:
          $ref: '#/components/schemas/Quantity'
        valueCodeableConcept:
          $ref: '#/components/schemas/CodeableConcept'
        valuePeriod:
          $ref: '#/components/schemas/Period'
      example:
        valueCodeableConcept: null
        valuePeriod:
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        valueQuantity:
          comparator: <
          unit: unit
          system: http://example.com/aeiou
          code: code
          value: value
    Quantity:
      required:
        - unit
        - value
      type: object
      properties:
        comparator:
          type: string
          enum:
            - <
            - <=
            - '>='
            - '>'
        unit:
          type: string
        system:
          type: string
          format: uri
        code:
          type: string
        value:
          type: string
      example:
        comparator: <
        unit: unit
        system: http://example.com/aeiou
        code: code
        value: value
    Condition:
      required:
        - code
        - diagnosticReports
      type: object
      properties:
        id:
          type: string
        code:
          $ref: '#/components/schemas/CodeableConcept'
        onset:
          type: string
          description: Date of condition onset
          format: date-time
        diagnosticReports:
          type: array
          items:
            $ref: '#/components/schemas/DiagnosticReport'
      example:
        code:
          coding:
            - code: code
              system: http://example.com/aeiou
              display: display
            - code: code
              system: http://example.com/aeiou
              display: display
          text: text
        diagnosticReports:
          - code: null
            effectiveDateTime: 2000-01-23T04:56:07.000+00:00
            observations:
              - code:
                  coding:
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                  text: text
                effectiveDateTime: 2000-01-23T04:56:07.000+00:00
                id: id
                value:
                  valueCodeableConcept: null
                  valuePeriod:
                    start: 2000-01-23T04:56:07.000+00:00
                    end: 2000-01-23T04:56:07.000+00:00
                  valueQuantity:
                    comparator: <
                    unit: unit
                    system: http://example.com/aeiou
                    code: code
                    value: value
              - code:
                  coding:
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                  text: text
                effectiveDateTime: 2000-01-23T04:56:07.000+00:00
                id: id
                value:
                  valueCodeableConcept: null
                  valuePeriod:
                    start: 2000-01-23T04:56:07.000+00:00
                    end: 2000-01-23T04:56:07.000+00:00
                  valueQuantity:
                    comparator: <
                    unit: unit
                    system: http://example.com/aeiou
                    code: code
                    value: value
            id: id
            category:
              - null
              - null
            issued: issued
            status: status
          - code: null
            effectiveDateTime: 2000-01-23T04:56:07.000+00:00
            observations:
              - code:
                  coding:
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                  text: text
                effectiveDateTime: 2000-01-23T04:56:07.000+00:00
                id: id
                value:
                  valueCodeableConcept: null
                  valuePeriod:
                    start: 2000-01-23T04:56:07.000+00:00
                    end: 2000-01-23T04:56:07.000+00:00
                  valueQuantity:
                    comparator: <
                    unit: unit
                    system: http://example.com/aeiou
                    code: code
                    value: value
              - code:
                  coding:
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                    - code: code
                      system: http://example.com/aeiou
                      display: display
                  text: text
                effectiveDateTime: 2000-01-23T04:56:07.000+00:00
                id: id
                value:
                  valueCodeableConcept: null
                  valuePeriod:
                    start: 2000-01-23T04:56:07.000+00:00
                    end: 2000-01-23T04:56:07.000+00:00
                  valueQuantity:
                    comparator: <
                    unit: unit
                    system: http://example.com/aeiou
                    code: code
                    value: value
            id: id
            category:
              - null
              - null
            issued: issued
            status: status
        id: id
        onset: 2000-01-23T04:56:07.000+00:00
    Observation:
      required:
        - code
        - effectiveDateTime
        - id
        - value
      type: object
      properties:
        id:
          type: string
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          format: date-time
        value:
          $ref: '#/components/schemas/Value'
      example:
        code:
          coding:
            - code: code
              system: http://example.com/aeiou
              display: display
            - code: code
              system: http://example.com/aeiou
              display: display
          text: text
        effectiveDateTime: 2000-01-23T04:56:07.000+00:00
        id: id
        value:
          valueCodeableConcept: null
          valuePeriod:
            start: 2000-01-23T04:56:07.000+00:00
            end: 2000-01-23T04:56:07.000+00:00
          valueQuantity:
            comparator: <
            unit: unit
            system: http://example.com/aeiou
            code: code
            value: value
    DiagnosticReport:
      required:
        - category
        - code
        - effectiveDateTime
        - issued
        - observations
        - status
      type: object
      properties:
        id:
          type: string
        status:
          type: string
        category:
          type: array
          items:
            $ref: '#/components/schemas/CodeableConcept'
        code:
          $ref: '#/components/schemas/CodeableConcept'
        effectiveDateTime:
          type: string
          format: date-time
        issued:
          type: string
        observations:
          type: array
          items:
            $ref: '#/components/schemas/Observation'
      example:
        code: null
        effectiveDateTime: 2000-01-23T04:56:07.000+00:00
        observations:
          - code:
              coding:
                - code: code
                  system: http://example.com/aeiou
                  display: display
                - code: code
                  system: http://example.com/aeiou
                  display: display
              text: text
            effectiveDateTime: 2000-01-23T04:56:07.000+00:00
            id: id
            value:
              valueCodeableConcept: null
              valuePeriod:
                start: 2000-01-23T04:56:07.000+00:00
                end: 2000-01-23T04:56:07.000+00:00
              valueQuantity:
                comparator: <
                unit: unit
                system: http://example.com/aeiou
                code: code
                value: value
          - code:
              coding:
                - code: code
                  system: http://example.com/aeiou
                  display: display
                - code: code
                  system: http://example.com/aeiou
                  display: display
              text: text
            effectiveDateTime: 2000-01-23T04:56:07.000+00:00
            id: id
            value:
              valueCodeableConcept: null
              valuePeriod:
                start: 2000-01-23T04:56:07.000+00:00
                end: 2000-01-23T04:56:07.000+00:00
              valueQuantity:
                comparator: <
                unit: unit
                system: http://example.com/aeiou
                code: code
                value: value
        id: id
        category:
          - null
          - null
        issued: issued
        status: status
    CodeableConcept:
      required:
        - coding
      type: object
      properties:
        coding:
          $ref: '#/components/schemas/Coding'
        text:
          type: string
      example:
        coding:
          - code: code
            system: http://example.com/aeiou
            display: display
          - code: code
            system: http://example.com/aeiou
            display: display
        text: text
    Coding:
      type: array
      items:
        $ref: '#/components/schemas/Coding_inner'
    Period:
      required:
        - end
        - start
      type: object
      properties:
        start:
          type: string
          format: date-time
        end:
          type: string
          format: date-time
      example:
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
    Patient:
      required:
        - demographics
        - dob
        - email
        - gender
        - homeAddress
        - homePhone
        - insurance
        - mobilePhone
        - mrn
        - name
      type: object
      properties:
        id:
          type: integer
          description: DocSpera Patient ID
        name:
          $ref: '#/components/schemas/Patient_name'
        mrn:
          type: string
          example: LS12345
        dob:
          type: string
          format: date
          example: 1965-01-01
        insurance:
          $ref: '#/components/schemas/Patient_insurance'
        gender:
          nullable: true
          type: string
          enum:
            - male
            - female
            - other
        sex:
          type: string
          enum:
            - male
            - female
        demographics:
          $ref: '#/components/schemas/Patient_demographics'
        homeAddress:
          $ref: '#/components/schemas/Patient_homeAddress'
        mobilePhone:
          type: string
          format: phone
          nullable: true
        homePhone:
          type: string
          format: phone
          nullable: true
        email:
          type: string
          format: email
          nullable: true
      example:
        insurance:
          period:
            start: 2000-01-23T04:56:07.000+00:00
            end: 2000-01-23T04:56:07.000+00:00
          type: type
          policy: policy
          group: group
        gender: male
        mobilePhone: mobilePhone
        dob: 1965-01-01T00:00:00.000+00:00
        sex: male
        homePhone: homePhone
        name:
          given:
            - Luca
            - M
          family: Santarella
        mrn: LS12345
        id: id
        email: ""
        demographics:
          ethnicity: ethnicity
          race: race
        homeAddress:
          line_1: line_1
          zip: zip
          line_2: line_2
          country: country
          city: city
          state: state
    Participant:
      required:
        - name
        - specialty
        - type
        - user_id
      type: object
      properties:
        user_id:
          type: integer
        name:
          type: string
          readOnly: true
        type:
          type: integer
          readOnly: true
        specialty:
          type: string
          readOnly: true
      example:
        user_id: 2239
        name: Rachel Green
        type: 1
        sub: 1
        specialty: Orthopaedics
    Appointment:
      allOf:
        - $ref: '#/components/schemas/Period'
        - required:
            - description
            - end
            - participants
            - serviceType
            - start
            - status
          type: object
          properties:
            id:
              type: integer
            status:
              type: string
              enum:
                - booked
                - cancelled
            description:
              type: string
            created:
              type: string
              format: datetime
              readOnly: true
            serviceType:
              type: array
              items:
                $ref: '#/components/schemas/CodeableConcept'
            participants:
              type: array
              items:
                $ref: '#/components/schemas/Participant'
            location:
              type: string
              description: Location of the appointment
              required: false
    Surgery:
      allOf:
        - $ref: '#/components/schemas/Appointment'
        - type: object
          properties:
            assigned:
              $ref: '#/components/schemas/Participant'
    Reaction:
      required:
        - description
        - manifestation
        - severity
      type: object
      properties:
        manifestation:
          type: array
          items:
            $ref: '#/components/schemas/CodeableConcept'
        description:
          type: string
        severity:
          type: string
      example:
        severity: severity
        manifestation:
          - null
          - null
        description: description
    Allergy:
      required:
        - category
        - clinicalStatus
        - code
        - criticality
        - onsetDateTime
        - reaction
        - recordedDate
        - type
        - verificationStatus
      type: object
      properties:
        id:
          type: string
        clinicalStatus:
          type: string
        verificationStatus:
          type: string
        type:
          type: string
        criticality:
          type: string
        category:
          type: array
          items:
            type: string
        code:
          $ref: '#/components/schemas/CodeableConcept'
        onsetDateTime:
          type: string
        recordedDate:
          type: string
        reaction:
          minItems: 0
          type: array
          items:
            $ref: '#/components/schemas/Reaction'
      example:
        code:
          coding:
            - code: code
              system: http://example.com/aeiou
              display: display
            - code: code
              system: http://example.com/aeiou
              display: display
          text: text
        reaction:
          - severity: severity
            manifestation:
              - null
              - null
            description: description
          - severity: severity
            manifestation:
              - null
              - null
            description: description
        verificationStatus: verificationStatus
        recordedDate: recordedDate
        criticality: criticality
        id: id
        clinicalStatus: clinicalStatus
        type: type
        category:
          - category
          - category
        onsetDateTime: onsetDateTime
    MedicationAdministration:
      allOf:
        - $ref: '#/components/schemas/Period'
        - required:
            - id
            - status
          type: object
          properties:
            id:
              type: string
              readOnly: true
            status:
              type: string
    Prescription:
      allOf:
        - $ref: '#/components/schemas/Period'
        - required:
            - id
            - status
            - intent
            - priority
          type: object
          properties:
            id:
              type: string
            status:
              type: string
            intent:
              type: string
            priority:
              type: string
    Medication:
      required:
        - administration
        - code
        - prescription
      type: object
      properties:
        code:
          $ref: '#/components/schemas/CodeableConcept'
        prescription:
          $ref: '#/components/schemas/Prescription'
        administrations:
          type: array
          items:
            $ref: '#/components/schemas/MedicationAdministration'
      example:
        administrations:
          - ""
          - ""
        code:
          coding:
            - code: code
              system: http://example.com/aeiou
              display: display
            - code: code
              system: http://example.com/aeiou
              display: display
          text: text
        prescription: ""
    Coding_inner:
      required:
        - code
        - system
      type: object
      properties:
        code:
          type: string
          nullable: true
        system:
          type: string
          format: uri
          nullable: true
        display:
          type: string
          nullable: true
      example:
        code: code
        system: http://example.com/aeiou
        display: display
    Patient_name:
      type: object
      properties:
        family:
          type: string
          example: Santarella
        given:
          type: array
          example:
            - Luca
            - M
          items:
            type: string
      example:
        given:
          - Luca
          - M
        family: Santarella
    Patient_insurance:
      required:
        - group
        - period
        - policy
        - type
        - status
        - provider
        - group_2
        - type_2
        - policy_2
        - provider_2
      type: object
      properties:
        id:
          type: string
          writeOnly: true
        type:
          type: string
        policy:
          type: string
        group:
          type: string
        period:
          $ref: '#/components/schemas/Period'
        status:
          type: string
        provider:
          type: string
        group_2:
          type: string
        type_2:
          type: string
        policy_2:
          type: string
        provider_2:
          type: string
      nullable: true
      example:
        period:
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        type: type
        policy: policy
        group: group
        status: status
        provider: provider
        group_2: group_2
        type_2: type_2
        policy_2: policy_2
        provider_2: provider_2
    Patient_demographics:
      required:
        - ethnicity
        - race
      type: object
      properties:
        ethnicity:
          type: string
        race:
          type: string
      example:
        ethnicity: ethnicity
        race: race
    Patient_homeAddress:
      required:
        - city
        - country
        - line_1
        - line_2
        - state
        - zip
      type: object
      properties:
        line_1:
          type: string
          nullable: true
        line_2:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        state:
          type: string
          nullable: true
        zip:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
      example:
        line_1: line_1
        zip: zip
        line_2: line_2
        country: country
        city: city
        state: state
  requestBodies:
    IngestOperation:
      description: Ingest Operation
      content:
        application/json:
          schema:
            required:
              - allergies
              - clinicalAppointments
              - conditions
              - medications
              - observations
              - pastProcedures
              - patient
              - surgery
            type: object
            properties:
              patient:
                $ref: '#/components/schemas/Patient'
              surgery:
                $ref: '#/components/schemas/Surgery'
              clinicalAppointments:
                type: array
                items:
                  $ref: '#/components/schemas/Appointment'
              conditions:
                type: array
                items:
                  $ref: '#/components/schemas/Condition'
              allergies:
                type: array
                items:
                  $ref: '#/components/schemas/Allergy'
              pastProcedures:
                type: array
                items:
                  required:
                    - code
                    - performedDateTime
                    - status
                  type: object
                  properties:
                    code:
                      $ref: '#/components/schemas/CodeableConcept'
                    performedDateTime:
                      type: string
                      format: datetime
                    status:
                      type: string
              medications:
                type: array
                items:
                  $ref: '#/components/schemas/Medication'
              observations:
                type: array
                items:
                  $ref: '#/components/schemas/Observation'
      required: true
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      x-basicInfoFunc: swagger_server.controllers.authorization_controller.check_basicAuth

